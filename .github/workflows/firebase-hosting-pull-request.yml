name: Deploy Preview to Firebase Hosting

on:
  pull_request:
    branches:
      - main

jobs:
  build_and_preview:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
        
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.FIREBASE_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          create_credentials_file: true
        
      - name: Deploy Preview to Firebase Hosting
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
        run: |
          firebase hosting:channel:deploy preview-${{ github.event.number }} \
            --project=${{ secrets.FIREBASE_PROJECT_ID }} \
            --expires=7d \
            --json > preview_output.json
            
      - name: Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const previewOutput = JSON.parse(fs.readFileSync('preview_output.json', 'utf8'));
            const previewUrl = previewOutput.result[Object.keys(previewOutput.result)[0]].url;
            
            const comment = `ðŸš€ **Preview deployed!**
            
            ðŸ“± **Preview URL:** ${previewUrl}
            
            This preview will be available for 7 days and will be automatically cleaned up.
            
            Built with commit ${context.sha}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });